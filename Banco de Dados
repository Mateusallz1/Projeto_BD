CREATE TABLE Cliente ( --cod_cliente, nome, cpf, telefone, dt_nasc
	cod_cliente serial not null primary key,
	nome varchar(125),
	cpf int,
	telefone int,
	dt_nasc date -- ano-mês-dia
);

select * from cliente;
drop table cliente cascade;
insert into visao_cliente values(default, 'Amanda', null, 24242525, '2020-01-23');
select * from visao_cliente

--==========================================TRIGGER CLIENTE======================================================--
--== INSTEAD OF evita que coloque na visão, e bota diretamente na tabela da visão ==--
-- Toda vez que for feito um insert na view de cliente, o trigger dispara.
CREATE or REPLACE VIEW visao_cliente AS SELECT * FROM Cliente;
CREATE TRIGGER Trig_Cliente INSTEAD OF INSERT ON visao_cliente FOR EACH ROW EXECUTE PROCEDURE checa_cliente();
--DROP TRIGGER trig_cliente ON cliente CASCADE;

CREATE OR REPLACE FUNCTION checa_cliente() RETURNS TRIGGER AS 
$$
	BEGIN
		--Verifica se os dados que serão inseridos são nulos.
		IF (new.nome is NULL or new.cpf is NULL) THEN
			RAISE EXCEPTION 'Você inseriu valores nulos. Tente novamente.';
		END IF;
		RETURN NEW; --new é por linha, null é por instrução.
	END;
$$ LANGUAGE plpgsql;

--==========================================FUNCTION CLIENTE======================================================--
--INSERT FUNCTION
CREATE OR REPLACE FUNCTION Realiza_Insercao(nome varchar(125), cpf int, telefone int, dt_nasc date) RETURNS Void AS $$
BEGIN
	INSERT INTO Cliente VALUES(DEFAULT, $1, $2, $3, $4);
END;
$$ LANGUAGE 'plpgsql';
--CONFERE CPF*;
--CONFERE NUMERO TEL*;

--VALIDA DATA NASC;
select data_valida('1800-12-14')
select data_valida('2020-12-10')
select current_date

CREATE OR REPLACE FUNCTION Data_Valida(dt_nasc date) RETURNS BOOLEAN AS $$
BEGIN
	IF current_date - $1 > 120 then
		RETURN false;
	ELSE
		RETURN true;
	END IF;
END;
$$ LANGUAGE 'plpgsql';

--===============================================================================================================--
